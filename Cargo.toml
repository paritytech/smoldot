[package]
name = "smoldot"
version = "0.1.0"
authors = ["Parity Technologies <admin@parity.io>", "Pierre Krieger <pierre.krieger1708@gmail.com>"]
description = "Primitives to build a client for Substrate-based blockchains"
repository = "https://github.com/paritytech/smoldot"
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
edition = "2018"
readme = "README.md"
keywords = ["blockchain", "peer-to-peer"]

[workspace]
default-members = [".", "bin/full-node"]
members = [
    ".",
    "bin/full-node",
    "bin/wasm-node/rust",
]

[features]
default = ["database-sled", "std"]
database-sled = [
    "sled",
]
std = [
    "async-std",
    "corooteen",
    "futures/thread-pool",
    "soketto",
    "wasmtime",
]

[dependencies]
# This section contains only no_std-compatible crates. See below for std-only crates.
#
# Before adding a crate here, please make sure that it is `no_std`-compatible. If a crate should
# theoretically be `no_std`-compatible (i.e. doesn't need the help of the operating system) but is
# not, or if things are sketchy, please leave a comment next to it.
ahash = { version = "0.6.2", default-features = false }
arrayvec = { version = "0.5.2", default-features = false }
blake2-rfc = { version = "0.2.18", default-features = false }
bs58 = { version = "0.4.0", default-features = false, features = ["alloc"] }
derive_more = "0.99.11"
ed25519-dalek = { version = "1.0.1", default-features = false, features = ["alloc", "batch", "u64_backend"] }
either = { version = "1.6.1", default-features = false }
fnv = { version = "1.0.7", default-features = false }
futures = "0.3.12"   # TODO: no-std-ize
hashbrown = { version = "0.9.1", default-features = false, features = ["serde"] }   # TODO: remove serde feature
hex = { version = "0.4.2", default-features = false }
libsecp256k1 = { version = "0.3.5", default-features = false }
# Reminder: `log` is forbidden
merlin = { version = "2.0", default-features = false }
multihash = "0.11.4"  # TODO: waiting for a crates.io publication of https://github.com/multiformats/rust-multihash/pull/82 that adds no_std support
nom = { version = "6.1.0", default-features = false, features = ["alloc"] }
num-bigint = { version = "0.3.1", default-features = false }
num-rational = { version = "0.3.2", default-features = false, features = ["num-bigint"] }
num-traits = { version = "0.2.14", default-features = false }
parity-multiaddr = "0.11.0" # TODO: doesn't support no_std
pin-project = "1.0.4"
prost = { version = "0.7.0", default-features = false }
rand = { version = "0.8.3", default-features = false, features = ["std", "std_rng"] }  # TODO: rand is used in hack-y ways at the moment ; these features should be removed
rand_chacha = { version = "0.3.0", default-features = false }
schnorrkel = { git = "https://github.com/w3f/schnorrkel", rev = "cfdbe9ae865a4d3ffa2566d896d4dbedf5107028", features = ["preaudit_deprecated"] } # TODO: waiting for a publication { version = "0.9.1", default-features = false, features = ["preaudit_deprecated"] }
serde = { version = "1.0.123", default-features = false, features = ["alloc", "derive"] }
serde_json = { version = "1.0.61", default-features = false, features = ["alloc", "raw_value"] }
sha2 = { version = "0.9.2", default-features = false }
slab = "0.4.2"  # TODO: doesn't support no_std and is unmaintained :-/
smallvec = "1.6.1"
snow = { version = "0.7.2", default-features = false, features = ["default-resolver"] }
tiny-keccak = { version = "2.0", features = ["keccak"] }
twox-hash = "1.6.0"
wasmi = { version = "0.7.0", default-features = false, features = ["core"] }  # TODO: having to add `core` is sketchy; maybe report this

# `database-sled` feature
sled = { version = "0.34.6", optional = true, features = ["compression"] }

# `std` feature
# Add here the crates that cannot function without the help of the operating system or environment.
async-std = { version = "1.9.0", optional = true }
soketto = { version = "0.4.2", optional = true }

# BELOW: DEPENDENCIES TO REMOVE
# TODO:
parity-scale-codec = { version = "2.0.0", features = ["derive"] } # TODO: a lot of unnecessary overhead in terms of memory allocations

[target.'cfg(target_arch = "x86_64")'.dependencies]
# `std` feature
corooteen = { git = "https://github.com/tomaka/corooteen", optional = true } # TODO: CRITICAL /!\ this code is veeery unsafe at the moment
wasmtime = { version = "0.22.0", default-features = false, optional = true }

[build-dependencies]
prost-build = "0.7.0"

[dev-dependencies]
async-std = "1.9.0"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[profile.dev]
opt-level = 2
panic = "abort"
[profile.dev.package."*"]
opt-level = 3

# The `test` profile mimics the `dev` profile to avoid recompilations.
[profile.test]
opt-level = 2
[profile.test.package."*"]
opt-level = 3

[profile.release]
panic = "abort"
lto = true
#strip = "symbols"      # TODO: uncomment once stable
